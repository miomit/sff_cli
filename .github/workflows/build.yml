name: Publish utility on release

on:
  push:
    branches:
      - main
  release:
    types: [published]

permissions:
  contents: write

jobs:
    build:
        name: Build binaries
        runs-on: ubuntu-latest
        steps:

          - uses: actions/checkout@v4
          - uses: dart-lang/setup-dart@v1

          - name: 'ðŸ“¦ Package linux x64'
            run: |
                git submodule init
                git submodule update
                dart pub get
                ./deb_build.sh
          
          - name: Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: action
              release_name: update
              draft: true
              prerelease: false

          - uses: actions/upload-release-asset@v1.0.1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ./deb/usr/bin/sff
              asset_name: sff
              asset_content_type: update)

          - uses: actions/upload-release-asset@v1.0.1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: build/sff.deb
              asset_name: sff.deb
              asset_content_type: update)

          - uses: eregon/publish-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              release_id: ${{ steps.create_release.outputs.id }}